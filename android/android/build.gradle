buildscript {
    ext {
        buildToolsVersion = "35.0.0"
        minSdkVersion = 24
        compileSdkVersion = 35
        targetSdkVersion = 30
        ndkVersion = "27.1.12297006"
        kotlinVersion = "1.9.10"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath("com.android.tools.build:gradle")
        classpath("com.facebook.react:react-native-gradle-plugin")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin")
    }
}

apply plugin: "com.facebook.react.rootproject"

// Add project-level properties for third-party libraries
project.ext.compileSdk = 35
project.ext.buildToolsVersion = "35.0.0"
project.ext.targetSdkVersion = 30

// Additional properties for compatibility
compileSdk = 35
buildToolsVersion = "35.0.0"
targetSdkVersion = 30

// Global React Native configuration
allprojects {
    ext {
        REACT_NATIVE_NODE_MODULES_DIR = file("${rootDir}/../node_modules/react-native")
    }

    // Android-first dependency resolution
    repositories {
        google()
        mavenCentral()
        maven { url "https://www.jitpack.io" }
        // 优先使用 Maven 仓库而不是 node_modules
        maven { url "https://maven.google.com" }
    }
}

// 自动化脚本任务
task setupReactNativeDeps {
    description = "自动设置 React Native 依赖，减少手动 npm install"
    doLast {
        println "🔧 检查 React Native 依赖..."

        def nodeModulesDir = file("../node_modules")
        if (!nodeModulesDir.exists()) {
            println "📦 自动执行 npm install..."
            exec {
                workingDir file("..")
                commandLine "npm", "install"
            }
        } else {
            println "✅ node_modules 已存在"
        }

        // 验证关键依赖
        def criticalDeps = [
            "react-native",
            "react-native-gesture-handler",
            "react-native-screens"
        ]

        criticalDeps.each { dep ->
            def depDir = file("../node_modules/${dep}")
            if (depDir.exists()) {
                println "✅ ${dep} 已安装"
            } else {
                throw new GradleException("❌ 缺少关键依赖: ${dep}")
            }
        }
    }
}

// 让所有构建任务依赖于依赖检查
tasks.whenTaskAdded { task ->
    if (task.name == 'preBuild') {
        task.dependsOn setupReactNativeDeps
    }
}

// 引入智能构建脚本
apply from: 'smart_build.gradle'
